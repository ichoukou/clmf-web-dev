package com.mwi.clmf.controller.admin.meeting;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.text.SimpleDateFormat;import java.util.Date;import com.jfinal.core.Controller;import com.jfinal.upload.UploadFile;import com.mwi.clmf.model.meeting.GuestFileModel;public class GuestFileController extends Controller {	public void index(){		int pageNumber = 1;		int pageSize = 10;				if(getParaToInt("pageNumber") != null && !"".equals(getParaToInt("pageNumber"))){			pageNumber = getParaToInt("pageNumber");		}				if(getParaToInt("pageSize") != null && !"".equals(getParaToInt("pageSize"))){			pageNumber = getParaToInt("pageSize");		}				setAttr("pageNumber", pageNumber);		setAttr("pageSize", pageSize);		setAttr("totalPage", GuestFileModel.fuDao.guestFilePage(pageNumber, pageSize).getTotalPage());		setAttr("fileInfor", GuestFileModel.fuDao.guestFilePage(pageNumber, pageSize));				render("mwi_guest_material.jsp");	}		public void uploadFile(){		boolean uploadSuc = false;		String path = "/data/guestFile/";		UploadFile uploadFile = getFile("file", "uft-8");		File source = uploadFile.getFile();		Long fileSize = source.length()/1024;		String fileName = source.getName();				//做完登陆之后修改		String uploader = "临时管理员";				String uploadfileName = "guestFile" + new SimpleDateFormat("yyyyMMddHHmmss").format(new Date()) + uploadFile.getFileName();		String filePath = path + uploadfileName;				try {			FileInputStream fis = new FileInputStream(source);			File targetDir = new File(path);			if (!targetDir.exists()) {				targetDir.mkdirs();			}			File target = new File(targetDir, uploadfileName);			if (!target.exists()) {				target.createNewFile();			}			FileOutputStream fos = new FileOutputStream(target);			byte[] bts = new byte[300];			while (fis.read(bts, 0, 300) != -1) {				fos.write(bts, 0, 300);			}			fos.close();			fis.close();			source.delete();			uploadSuc = true;		} catch (Exception e) {			uploadSuc = false;			e.printStackTrace();		}		if(uploadSuc){			new GuestFileModel()				.set("file_path", filePath)				.set("file_name", fileName)				.set("file_size", fileSize)				.set("uploader_name", uploader)				.set("download_counte", 0)				.set("upload_date", new SimpleDateFormat("YYYY-MM-dd").format(new Date(System.currentTimeMillis()))).save();		}				redirect("/guestFile");	}		public void deleteFile(){		GuestFileModel gfm = GuestFileModel.fuDao.findById(getPara());		File file = new File(gfm.getStr("file_path"));		boolean delSuc = file.delete();		if(delSuc){			GuestFileModel.fuDao.deleteById(getPara());		}		redirect("/guestFile");	}		public void download(){		GuestFileModel gfm = GuestFileModel.fuDao.findById(getPara());		File file = new File(gfm.getStr("file_path"));		gfm.set("download_counte", gfm.getLong("download_counte")+1).update();		renderFile(file);	}		public void batchDelete(){		String fileIdsStr = getPara();		String[] fileIdArr = fileIdsStr.split(",");		System.out.println(fileIdArr.length);				for(int i=0; i<fileIdArr.length; i++){			GuestFileModel gfm = GuestFileModel.fuDao.findById(fileIdArr[i]);			File file = new File(gfm.getStr("file_path"));			boolean delSuc = file.delete();			if(delSuc){				GuestFileModel.fuDao.deleteById(fileIdArr[i]);			}		}		redirect("/guestFile");			}			}