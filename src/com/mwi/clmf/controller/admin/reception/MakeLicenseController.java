package com.mwi.clmf.controller.admin.reception;import java.text.SimpleDateFormat;import java.util.Date;import javax.servlet.http.Cookie;import com.jfinal.core.Controller;import com.jfinal.plugin.activerecord.Page;import com.mwi.clmf.model.ChackCardModel;import com.mwi.clmf.model.CountryModel;import com.mwi.clmf.model.activity.ActivityManagementModel;import com.mwi.clmf.model.activity.RouteModel;import com.mwi.clmf.model.guest.GuestInforModel;import com.mwi.clmf.model.guest.GuestTripModel;import com.mwi.clmf.model.guest.GuestTypeModel;import com.mwi.clmf.model.guest.GuestVisaModel;import com.mwi.clmf.model.hotel.HotelInforModel;import com.mwi.clmf.model.hotel.HotelManagementModel;import com.mwi.clmf.model.hotel.HotelRoomModel;import com.mwi.clmf.model.staff.WorkerGroupModel;import com.mwi.clmf.model.staff.WorkerInforModel;import com.mwi.clmf.util.Validator;public class MakeLicenseController extends Controller {	public void index(){				int pageNumber = getParaToInt("pageNumber") == null ? 1 : getParaToInt("pageNumber");		int pageSize = getParaToInt("pageSize") == null ? 10 : getParaToInt("pageSize");		int flag = getParaToInt("flag") == null ? 1 : getParaToInt("flag");				String chineseName = getPara("chineseName");		String englishName = getPara("englishName");		String isActive = getPara("isActive");		String licenseNum = getPara("licenseNum");		String post = getPara("post");		String guestType = getPara("guestType");				String realName = getPara("realName");		String unit = getPara("unit");		String groupName = getPara("groupName");				Page<GuestInforModel> guestPage = GuestInforModel.guestDao.guestInfor4License(pageNumber, pageSize, chineseName, englishName, isActive, licenseNum, post, guestType);		Page<WorkerInforModel> workerPage = WorkerInforModel.wiDao.workerInfor4License(pageNumber, pageSize, "1", realName, unit, post, groupName, licenseNum);		Page<WorkerInforModel> supporterPage = WorkerInforModel.wiDao.workerInfor4License(pageNumber, pageSize, "2", realName, unit, post, groupName, licenseNum);				setAttr("chineseName", chineseName);		setAttr("englishName", englishName);		setAttr("isActive", isActive);		setAttr("licenseNum", licenseNum);		setAttr("post", post);		setAttr("guestType", guestType);		setAttr("flag", flag);				setAttr("realName", realName);		setAttr("unit", unit);		setAttr("groupName", groupName);				setAttr("guestCount", guestPage.getTotalRow());		setAttr("workerCount", workerPage.getTotalRow());		setAttr("supporterCount", supporterPage.getTotalRow());				setAttr("pageNumber", pageNumber);		setAttr("pageSize", pageSize);		setAttr("guestTotalPage", guestPage.getTotalPage());		setAttr("workerTotalPage", workerPage.getTotalPage());		setAttr("supporterTotalPage", supporterPage.getTotalPage());				setAttr("guestPage", guestPage);		setAttr("workerPage", workerPage);		setAttr("supporterPage", supporterPage);		setAttr("guestTypeList", GuestTypeModel.guestTypeDao.getGuestTypeList());				setAttr("groupList", WorkerGroupModel.wgDao.groupList());				render("mwi_accrediation_administration_page.jsp");	}		public void lost(){		String flag = getPara();		String lostIdsStr = getPara("lostIds");		String[] lostIds = lostIdsStr.split(",");		for(int i=0; i<lostIds.length; i++){			new ChackCardModel().findById(lostIds[i]).set("card_num", "").set("card_status", "0").update();		}		redirect("/makeLicense?flag="+flag);	}		public void toAdd(){		setAttr("flag", getParaToInt("flag"));		setAttr("routeList", RouteModel.rDao.routeList());		setAttr("hotelList", HotelInforModel.hiDao.hotelList());		setAttr("roomList", HotelRoomModel.hrDao.roomList());		setAttr("countryList", CountryModel.cDao.countryList());		render("editGuestDetail.jsp");	}		/**	 * 新增	 */	public void addGuest(){		// 嘉宾信息		GuestInforModel gi = getModel(GuestInforModel.class, "guestInfor");		boolean bl = gi.save();		System.out.println("guest infor：-- "+bl);		Long guestId = gi.getLong("id");		// 签证信息		boolean gvbl = true;		if("1".equals(gi.getStr("toVisa"))){			GuestVisaModel gv = getModel(GuestVisaModel.class, "visa");			gvbl = gv.set("guest_id", guestId).save();		}		System.out.println("guest visa : -- "+gvbl);		// 活动安排		Long routeId24 = getParaToLong("routeId24");		Long routeId25 = getParaToLong("routeId25");		Long[] routeId = new Long[2];		if(routeId24 != null){			routeId[0] = routeId24;		}		if(routeId25 != null){			routeId[1] = routeId25;		}		boolean rubl = true;		ActivityManagementModel.amDao.delActivityByGuestId(guestId);		if(routeId != null){			for (int i = 0; i < routeId.length; i++) {				if(routeId[i] != null){					ActivityManagementModel am = new ActivityManagementModel();					rubl = am.set("route_id", routeId[i]).set("guest_id", guestId).set("route_audit_status", "1").save();				}			}			System.out.println("route : -- "+rubl);		}		// 住宿安排		HotelManagementModel hm = new HotelManagementModel();		String checkin_time = Validator.isNull(getPara("checkin_time")) ? null : getPara("checkin_time");		String checkout_time = Validator.isNull(getPara("checkout_time")) ? null : getPara("checkout_time");		String with_roommate = getPara("with_roommate");		String roommate_name = "";		String roommate_idNo = "";		String roommate_email = "";		if("2".equals(with_roommate)){			roommate_name = getPara("roommate_name");			roommate_idNo = getPara("roommate_idNo");			roommate_email = getPara("roommate_email");		}		String is_smoking = getPara("is_smoking");		Long room_id = getParaToLong("room_id");		boolean hobl  = hm.set("checkin_time", checkin_time)					      .set("checkout_time", checkout_time)					      .set("with_roommate", with_roommate)					      .set("room_id", room_id)					      .set("is_smoking", is_smoking)					      .set("roommate_name", roommate_name)					      .set("roommate_idNo", roommate_idNo)					      .set("roommate_email", roommate_email)					      .set("guest_id", guestId)					      .set("status", 0).save();		System.out.println("hotel infor : -- "+hobl);		// 行程安排		GuestTripModel trip = getModel(GuestTripModel.class, "trip");		boolean gtbl = trip.set("guest_id", guestId)						   .set("create_time", new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())).save();		System.out.println("guest trip : -- "+gtbl);		Cookie cookie = new Cookie("addCode", bl && gvbl && rubl && hobl && gtbl ? "1" : "0");		getResponse().addCookie(cookie);		redirect("/makeLicense?flag=1");	}		/**	 * 编辑	 */	public void editGuest(){		// 嘉宾信息		GuestInforModel gi = getModel(GuestInforModel.class, "guestInfor");		Long guestId = gi.getLong("id");		boolean bl = gi.update();		System.out.println("guest infor：-- "+bl);		// 签证信息		boolean gvbl = true;		if("1".equals(gi.getStr("toVisa"))){			GuestVisaModel gv = getModel(GuestVisaModel.class, "visa");			gv.set("guest_id", guestId);			if(gv.getLong("id") != null){				gvbl = gv.update();			}else{				gvbl = gv.save();			}		}		System.out.println("guest visa : -- "+gvbl);		// 活动安排		Long routeId24 = getParaToLong("routeId24");		Long routeId25 = getParaToLong("routeId25");		Long[] routeId = new Long[2];		if(routeId24 != null){			routeId[0] = routeId24;		}		if(routeId25 != null){			routeId[1] = routeId25;		}		boolean rubl = true;		ActivityManagementModel.amDao.delActivityByGuestId(guestId);		if(routeId != null){			for (int i = 0; i < routeId.length; i++) {				if(routeId[i] != null){					ActivityManagementModel am = new ActivityManagementModel();					rubl = am.set("route_id", routeId[i]).set("guest_id", guestId).set("route_audit_status", "1").save();				}			}			System.out.println("route : -- "+rubl);		}		// 住宿安排		HotelManagementModel hm = HotelManagementModel.hmDao.getHotel(guestId);		boolean hobl = true;		if(hm != null){			String checkin_time = Validator.isNull(getPara("checkin_time")) ? null : getPara("checkin_time");			String checkout_time = Validator.isNull(getPara("checkout_time")) ? null : getPara("checkout_time");			String with_roommate = getPara("with_roommate");			String roommate_name = "";			String roommate_idNo = "";			String roommate_email = "";			if("2".equals(with_roommate)){				roommate_name = getPara("roommate_name");				roommate_idNo = getPara("roommate_idNo");				roommate_email = getPara("roommate_email");			}			String is_smoking = getPara("is_smoking");			Long room_id = getParaToLong("room_id");			hobl = hm.set("checkin_time", checkin_time)				     .set("checkout_time", checkout_time)				     .set("with_roommate", with_roommate)				     .set("room_id", room_id)				     .set("is_smoking", is_smoking)				     .set("roommate_name", roommate_name)				     .set("roommate_idNo", roommate_idNo)				     .set("roommate_email", roommate_email).update();		}		System.out.println("hotel infor : -- "+hobl);		// 行程安排		GuestTripModel gt = GuestTripModel.guestTripDao.getTripByGuestId(guestId);		boolean gtbl = true;		if(gt != null){			GuestTripModel trip = getModel(GuestTripModel.class, "trip");			gtbl = trip.set("id", gt.getLong("id")).update();		}		System.out.println("guest trip : -- "+gtbl);		Cookie cookie = new Cookie("editCode", bl && gvbl && rubl && hobl && gtbl ? "1" : "0");		getResponse().addCookie(cookie);		redirect("/makeLicense?flag=1");	}			}